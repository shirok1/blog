
name: studio-nuxt-build
run-name: studio nuxt build

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Identify package manager
        id: pkgman
        run: |
          cache=`[ -f "./pnpm-lock.yaml" ] && echo "pnpm" || ([ -f "./package-lock.json" ] && echo "npm" || ([ -f "./yarn.lock" ] && echo "yarn" || echo ""))`
          package_manager=`[ ! -z "$cache" ] && echo "$cache" || echo "pnpm"`
          echo "cache=$cache" >> $GITHUB_OUTPUT
          echo "package_manager=$package_manager" >> $GITHUB_OUTPUT
      - uses: pnpm/action-setup@v3
        if: ${{ steps.pkgman.outputs.package_manager == 'pnpm' }}
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.pkgman.outputs.cache }}
      # - name: Setup Pages
      #   uses: actions/configure-pages@v4
      #   with:
      #     # Automatically inject router.base in your Nuxt configuration file and set
      #     # target to static (https://nuxtjs.org/docs/configuration-glossary/configuration-target/).
      #     #
      #     # You may remove this line if you want to manage the configuration yourself.
      #     static_site_generator: nuxt
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Install dependencies
        run: ${{ steps.pkgman.outputs.package_manager }} install
      - name: Install @nuxthq/studio
        run: ${{ steps.pkgman.outputs.package_manager }} add -D @nuxthq/studio
      - name: Create .nuxtrc
        run: echo $'\nautoImport=true\nmodules[]=@nuxthq/studio' >> .nuxtrc
      - name: Generate
        run: npx nuxi build --preset github_pages
        env:
          NUXT_PUBLIC_STUDIO_API_URL: https://api.nuxt.studio
          NUXT_PUBLIC_STUDIO_TOKENS: fae6306adb23e182b2c0fb6249cbcd74897338ea38642b6557283b2d8925917e
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
